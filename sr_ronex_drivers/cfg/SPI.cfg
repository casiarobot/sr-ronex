#!/usr/bin/env python
PACKAGE="sr_ronex_drivers"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


command_enum = gen.enum([ gen.const("Normal", int_t, 1, "The command for normal operation"),
                          gen.const("Config", int_t, 2, "The command to request the config") ],
                        "Command Types")
gen.add("command_type", int_t, 0, "The command type to be sent.", 1, edit_method=command_enum)

#pre / post pin states
gen.add("pin_output_state_pre_0", bool_t, 0, "The pre state pin for spi output 0", False)
gen.add("pin_output_state_post_0", bool_t, 0, "The post state pin for spi output 0", False)

gen.add("pin_output_state_pre_1", bool_t, 0, "The pre state pin for spi output 1", False)
gen.add("pin_output_state_post_1", bool_t, 0, "The post state pin for spi output 1", False)

gen.add("pin_output_state_pre_2", bool_t, 0, "The pre state pin for spi output 2", False)
gen.add("pin_output_state_post_2", bool_t, 0, "The post state pin for spi output 2", False)

gen.add("pin_output_state_pre_3", bool_t, 0, "The pre state pin for spi output 3", False)
gen.add("pin_output_state_post_3", bool_t, 0, "The post state pin for spi output 3", False)


#config for spi packet 0
gen.add("spi_0_clock_divider", int_t, 0, "The Clock Divider - SPI[0]", 1, 0, 65535)
gen.add("spi_0_SPI_config", int_t, 0, "The SPI Config - SPI[0]", 1, 0, 65535)
gen.add("spi_0_inter_byte_gap", int_t, 0, "The Inter Byte Gap - SPI[0]", 1, 0, 255)

#config for spi packet 1
gen.add("spi_1_clock_divider", int_t, 0, "The Clock Divider - SPI[1]", 1, 0, 65535)
gen.add("spi_1_SPI_config", int_t, 0, "The SPI Config - SPI[1]", 1, 0, 65535)
gen.add("spi_1_inter_byte_gap", int_t, 0, "The Inter Byte Gap - SPI[1]", 1, 0, 255)

#config for spi packet 2
gen.add("spi_2_clock_divider", int_t, 0, "The Clock Divider - SPI[2]", 1, 0, 65535)
gen.add("spi_2_SPI_config", int_t, 0, "The SPI Config - SPI[2]", 1, 0, 65535)
gen.add("spi_2_inter_byte_gap", int_t, 0, "The Inter Byte Gap - SPI[2]", 1, 0, 255)

#config for spi packet 3
gen.add("spi_3_clock_divider", int_t, 0, "The Clock Divider - SPI[3]", 1, 0, 65535)
gen.add("spi_3_SPI_config", int_t, 0, "The SPI Config - SPI[3]", 1, 0, 65535)
gen.add("spi_3_inter_byte_gap", int_t, 0, "The Inter Byte Gap - SPI[3]", 1, 0, 255)

exit(gen.generate(PACKAGE, "ronex", "SPI"))
